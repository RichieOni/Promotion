// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Backend.Promotion.Models;

namespace Backend.Promotion.Data
{
    public partial class PromotionContext : DbContext
    {
        public PromotionContext()
        {
        }

        public PromotionContext(DbContextOptions<PromotionContext> options)
            : base(options)
        {
        }

        public virtual DbSet<PromoType> PromoTypes { get; set; }
        public virtual DbSet<PromotionDetail> PromotionDetails { get; set; }
        public virtual DbSet<PromotionHeader> PromotionHeaders { get; set; }
        public virtual DbSet<Store> Stores { get; set; }
        public virtual DbSet<Models.ValueType> ValueTypes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PromoType>(entity =>
            {
                entity.ToTable("PromoType");

                entity.Property(e => e.PromoTypeId)
                    .ValueGeneratedNever()
                    .HasColumnName("promoTypeId");

                entity.Property(e => e.PromoTypeName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("promoTypeName");

                entity.Property(e => e.SortOrder).HasColumnName("sortOrder");
            });

            modelBuilder.Entity<PromotionDetail>(entity =>
            {
                entity.ToTable("PromotionDetail");

                entity.Property(e => e.PromotionDetailId)
                    .ValueGeneratedNever()
                    .HasColumnName("promotionDetailId");

                entity.Property(e => e.PromotionId)
                    .IsRequired()
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("promotionId")
                    .IsFixedLength();

                entity.Property(e => e.StoreId)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("storeId")
                    .IsFixedLength();

                entity.HasOne(d => d.Promotion)
                    .WithMany(p => p.PromotionDetails)
                    .HasForeignKey(d => d.PromotionId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PromotionDetail_PromotionHeader");

                entity.HasOne(d => d.Store)
                    .WithMany(p => p.PromotionDetails)
                    .HasForeignKey(d => d.StoreId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PromotionDetail_Store");
            });

            modelBuilder.Entity<PromotionHeader>(entity =>
            {
                entity.HasKey(e => e.PromotionId);

                entity.ToTable("PromotionHeader");

                entity.Property(e => e.PromotionId)
                    .HasMaxLength(14)
                    .IsUnicode(false)
                    .HasColumnName("promotionId")
                    .IsFixedLength();

                entity.Property(e => e.EndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("endDate");

                entity.Property(e => e.PromoTypeId).HasColumnName("promoTypeId");

                entity.Property(e => e.PromotionDescription)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .HasColumnName("promotionDescription");

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasColumnName("startDate");

                entity.Property(e => e.ValueType).HasColumnName("valueType");

                entity.Property(e => e.ValueTypeId).HasColumnName("valueTypeId");

                entity.HasOne(d => d.PromoType)
                    .WithMany(p => p.PromotionHeaders)
                    .HasForeignKey(d => d.PromoTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PromotionHeader_PromoType");

                entity.HasOne(d => d.ValueTypeNavigation)
                    .WithMany(p => p.PromotionHeaders)
                    .HasForeignKey(d => d.ValueTypeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_PromotionHeader_ValueType");
            });

            modelBuilder.Entity<Store>(entity =>
            {
                entity.ToTable("Store");

                entity.Property(e => e.StoreId)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .HasColumnName("storeId")
                    .IsFixedLength();

                entity.Property(e => e.StoreName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .IsUnicode(false)
                    .HasColumnName("storeName");
            });

            modelBuilder.Entity<Models.ValueType>(entity =>
            {
                entity.ToTable("ValueType");

                entity.Property(e => e.ValueTypeId)
                    .ValueGeneratedNever()
                    .HasColumnName("valueTypeId");

                entity.Property(e => e.SortOrder).HasColumnName("sortOrder");

                entity.Property(e => e.ValueTypeName)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("valueTypeName");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}